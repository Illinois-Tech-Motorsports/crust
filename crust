#!/bin/bash

# GLOBAL CONFIG
APT_PACKAGES="sed make binutils build-essential diffutils gcc g++ bash patch gzip bzip2 perl tar cpio unzip rsync file bc findutils"
YUM_PACKAGES="sed make binutils diffutils gcc g++ bash patch gzip bzip2 perl tar cpio unzip rsync file bc findutils"

BR_CRUST_CONFIG="../crust_config"
# COLORS

GREEN="\e[32m"
YELLOW="\e[33m"
RED="\e[31m"
BLUE="\e[34m"
BOLD_RED="\e[1;31m"
BOLD_GREEN="\e[1;32m"
BOLD_YELLOW="\e[1;33m"
BOLD_BLUE="\e[1;4;34m"
RESET="\e[0m"

# UTILITY FUNCTIONS

header () {
    sleep 0.5s
    echo -e "\n${BOLD_BLUE}$1 ...${RESET}\n"
}

info () {
    echo -e "${BLUE}$1${RESET}"
}

warn () {
    echo -e "${BOLD_YELLOW}Warning: ${RESET}${YELLOW}$1${RESET}"
}

error () {
    echo -e "${BOLD_RED}Error: ${RESET}${RED}$1${RESET}"
    echo -e "\n${YELLOW}Press 'a' to acknowledge and continue, or any other key to quit.${RESET}"
    read -n 1 key

    if [[ $key = a ]]
    then
        return
    else
        exit
    fi

}

echo -e "${GREEN}
   __________  __  _____________
  / ____/ __ \/ / / / ___/_  __/
 / /   / /_/ / / / /\__ \ / /   
/ /___/ _, _/ /_/ /___/ // /    
\____/_/ |_|\____//____//_/     

${BOLD_GREEN}Image Builder | Single Container Service${RESET}                              
"

# Confirm proper OS / Build for running crust. If correct, install packages.
header "Checking system requirements"

if [ -f "/etc/debian_version" ]; then
   info "Debian detected! Installing required packages ..."
   apt install -y ${APT_PACKAGES}
elif [ -f "/etc/redhat-release" ]; then
   info "RHEL Detected! Installing required packages ..."
   yum install -y ${YUM_PACKAGES}
else
   error "Crust is only supported on Debian and RHEL. While it may still run properly, the necessary packages need to be installed manually.\nSee: https://buildroot.org/downloads/manual/manual.pdf (2.1 Mandatory Packages)"
fi

# Installs buildroot by default. 
header "Installing buildroot"

# Use -N to skip downloads, use -L to skip downloads and clean recompile kernel
if [ "$#" -eq 0 ] || [ "$1" != "-N" ] && [ "$1" != "-L" ]; then
    git clone git://git.buildroot.org/buildroot
    mv buildroot* buildroot
    wget -q --show-progress https://github.com/raspberrypi/firmware/raw/master/boot/bcm2711-rpi-cm4.dtb -P buildroot/output/images/
    wget -q --show-progress https://github.com/raspberrypi/firmware/raw/master/boot/bootcode.bin -P buildroot/output/images/
    wget -q --show-progress https://github.com/raspberrypi/firmware/raw/master/boot/start4.elf -P buildroot/output/images/
    wget -q --show-progress https://github.com/raspberrypi/firmware/raw/master/boot/fixup4.dat -P buildroot/output/images/
fi

header "Setting buildroot crust configuration"
make -C buildroot defconfig BR2_DEFCONFIG=${BR_CRUST_CONFIG}

header "Cleaning linux directory"
warn "This process is currently disabled"
# if [ "$#" -eq 0 ] || [ "$1" != "-L" ]; then
#     make -j $(nproc) -C linux-dirclean
# fi

header "Building crust image"
make -j $(nproc) -C buildroot

header "Finishing up"
yes | mv -f buildroot/output/images/sdcard.img ./crust.img
info "Final image built at $(pwd)/crust.img"
